@using Newtonsoft.Json.Linq;
@using Microsoft.AspNetCore.Components.Web;
<button type="button" class="@Class" data-toggle="@DataToggle" 
        @onclick="@(async ()=> {
                        // Check if OnClick null ?.Invoke seems to not be working for some reasons
                        if (OnClick != null)
                        {
                            await OnClick?.Invoke(); 
                        }
                    })"
        id="@Id" style="@Style.ToInlineCSS()">
    @ChildContent
</button>

@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    /// <summary>
    /// Unique HTML Identifier.
    /// </summary>
    [Parameter]
    public string Id { get; set; }

    /// <summary>
    /// Custom Class to Append at the end of default Foundation Class.
    /// </summary>
    [Parameter]
    public string Class { get; set; }

    /// <summary>
    /// HTML Style Attribute (JObject).
    /// <br/><br/><see href="https://flawlessloop.com/how-to-use-style-attribute/">How to Use Style</see>
    /// </summary>
    [Parameter]
    public JObject Style { get; set; }

    /// <summary>
    /// id of Foundation element to toggle can be anything. Modal, Switch, Off-Canvas....
    /// </summary>
    [Parameter]
    public string DataToggle { get; set; }

    /// <summary>
    /// OnClick Event Function (Default: null)
    /// </summary>
    [Parameter]
    public Func<Task> OnClick { get; set; }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

    }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
        if (Class != null) { Class = "button " + Class; }
        else { Class = "button"; }
    }

}
