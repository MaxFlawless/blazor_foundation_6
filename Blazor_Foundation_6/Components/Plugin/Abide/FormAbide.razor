@using Microsoft.JSInterop;
@using Newtonsoft.Json.Linq;
@inject IJSRuntime JSRuntime;
@implements System.IDisposable;
    <form style="@Style.ToInlineCSS()" id="@Id" data-abide novalidate>
        @if (FormErrorMessage != null)
        {
            <div data-abide-error class="alert callout" style="display: none;">
                <p><i class="fi-alert"></i> @FormErrorMessage</p>
            </div>
        }

        @ChildContent
    </form>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    /// <summary>
    /// Type of Input
    /// </summary>
    [Parameter]
    public JObject Style { get; set; } = new JObject();


    /// <summary>
    /// Unique HTML Identifier.
    /// </summary>
    [Parameter]
    public string Id { get; set; }

    /// <summary>
    /// Form Error
    /// </summary>
    [Parameter]
    public string FormErrorMessage { get; set; }

    /// <summary>
    /// If false, you will have to create initializer for this Foundation 6 component yourself in javascript. (Default: True)
    /// </summary>
    [Parameter]
    public bool AutoManaged { get; set; } = true;

    /// <summary>
    /// List of Options to pass when initilization is handled by Blazor. Leave blank if AutoManaged = false.
    /// </summary>
    [Parameter]
    public JObject DataOptions { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (AutoManaged)
            {
                //Console.WriteLine("Accordion Registering");
                await JSRuntime.InvokeVoidAsync("AbideRegister", Id, DataOptions != null ? DataOptions.ToString() : null);
            }
        }

    }


    public void Dispose()
    {
        if (AutoManaged)
        {
            JSRuntime.InvokeVoidAsync("FoundationDestroy", Id);
        }
    }
}
