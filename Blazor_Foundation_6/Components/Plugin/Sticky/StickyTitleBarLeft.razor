@using Microsoft.JSInterop;
@using Newtonsoft.Json.Linq;
@using Microsoft.AspNetCore.Components.Web;
@inject IJSRuntime JSRuntime;

<div class="@Class" id="@Id" data-sticky style="@Style.ToInlineCSS()">
    @ChildContent
</div>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    /// <summary>
    /// Add Custom Class
    /// </summary>
    [Parameter]
    public string Class { get; set; }

    /// <summary>
    /// Define Unique ID for the Tag
    /// </summary>
    [Parameter]
    public string Id { get; set; }

    /// <summary>
    /// HTML Style Attribute (JObject).
    /// <br/><br/><see href="https://flawlessloop.com/how-to-use-style-attribute/">How to Use Style</see>
    /// </summary>
    [Parameter]
    public JObject Style { get; set; }


    protected override async Task OnInitializedAsync()
    {

    }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
        string forcedClass = "title-bar-left";

        if (Class != null)
        {
            Class = $"{forcedClass} " + Class;
        }
        else
        {
            Class = forcedClass;
        }
    }
}
