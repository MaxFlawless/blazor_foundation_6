@using Newtonsoft.Json.Linq;
@using Microsoft.AspNetCore.Components.Web;
<div class="@Class" id="@Id" style="@Style.ToInlineCSS()">
    @ChildContent
</div>

@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    /// <summary>
    /// Unique HTML Identifier.
    /// </summary>
    [Parameter]
    public string Id { get; set; }

    /// <summary>
    /// Custom Class to Append at the end of default Foundation Class.
    /// </summary>
    [Parameter]
    public string Class { get; set; }

    /// <summary>
    /// HTML Style Attribute (JObject).
    /// <br/><br/><see href="https://flawlessloop.com/how-to-use-style-attribute/">How to Use Style</see>
    /// </summary>
    [Parameter]
    public JObject Style { get; set; }

    [Parameter]
    public bool Active { get; set; } = false;


    protected override async Task OnInitializedAsync()
    {


    }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
        if (Class != null) { Class = "tabs-panel " + Class; }
        else { Class = "tabs-panel"; }

        if (Active) { Class += " is-active"; }
    }
}
