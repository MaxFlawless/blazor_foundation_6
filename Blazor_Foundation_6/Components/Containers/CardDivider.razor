@using Newtonsoft.Json.Linq;

<div class="@Class" id="@Id" style="@Style.ToInlineCSS()">
    @ChildContent
</div>

@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    /// <summary>
    /// Unique HTML Identifier.
    /// </summary>
    [Parameter]
    public string Id { get; set; }

    /// <summary>
    /// Custom Class to Append at the end of default Foundation Class.
    /// </summary>
    [Parameter]
    public string Class { get; set; }

    /// <summary>
    /// HTML Style Attribute (JObject).
    /// <br/><br/><see href="https://flawlessloop.com/how-to-use-style-attribute/">How to Use Style</see>
    /// </summary>
    [Parameter]
    public JObject Style { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Class != null)
        {
            Class = "card-divider " + Class;
        }
        else
        {
            Class = "card-divider";
        }

    }
}
