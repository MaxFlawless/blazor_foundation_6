@using Newtonsoft.Json.Linq;
<div class="@Class" id="@Id" style="@Style.ToInlineCSS()">
    @ChildContent
</div>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }


    /// <summary>
    /// Unique HTML Identifier.
    /// </summary>
    [Parameter]
    public string Id { get; set; }

    /// <summary>
    /// Custom Class to Append at the end of default Foundation Class.
    /// </summary>
    [Parameter]
    public string Class { get; set; }

    /// <summary>
    /// HTML Style Attribute (JObject).
    /// <br/><br/><see href="https://flawlessloop.com/how-to-use-style-attribute/">How to Use Style</see>
    /// </summary>
    [Parameter]
    public JObject Style { get; set; }

    /// <summary>
    /// small-4, auto, shrink, large-auto, small-up-2, medium-up-4, large-up-6 and more...
    /// <br/><br/><see href="https://get.foundation/sites/docs/xy-grid.html#auto-sizing">Documentation</see>
    /// </summary>
    [Parameter]
    public string Size { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Class != null)
        {
            Class = "cell " + Class;
        }
        else
        {
            Class = "cell";
        }
        if (Size != null)
        {
            Class += $" {Size}";
        }
    }
}

